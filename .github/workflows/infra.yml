## kwara GitHub Action

name: AWS kwara challenge Infra Provision

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  eks-flux:
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    name: 'AWS EKS Deployments'
    runs-on: ubuntu-latest
    env:

      ## Workspace Variable used for all steps
      ## Input values are 'kwara' or any other environment specified, most cases, its dev, prod or staging
      WORKSPACE_ENV: 'kwara'

      ## Terraform Variables 
      ## Input values are 'apply or destroy'         
      TF_VERBOSE: 'Apply'

      ## AWS Parameters
      AWS_DEFAULT_REGION: 'eu-west-1'  
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      ASSUME_ROLES: ${{ secrets.ASSUME_ROLES }}

      ## GITHUB TOKEN
      API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      USER_GITHUB: ${{ secrets.USER_GITHUB }}

    steps:
    ## Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    ## Terraform Execution using GitHub Docker Container Action https://docs.github.com/en/actions/creating-actions/creating-a-docker-container-action  
    - name: Terraform Execution
      if: ${{ env.TF_VERBOSE != '' }}
      uses: ./actions/terraform-action

#### END ####
